/*
10. Develop a C program to simulate SCAN disk scheduling algorithm.
*/

#include<stdio.h>
#include<stdlib.h>

int main() {
    int queue[20], n, head, i, j, k, seek = 0, max, diff, temp, queue1[20], queue2[20], temp1 = 0, temp2 = 0;
    float avg;

    printf("Enter the max range of disk\n");
    scanf("%d", &max);

    printf("Enter the initial head position\n");
    scanf("%d", &head);

    printf("Enter the size of queue request\n");
    scanf("%d", &n);

    printf("Enter the queue of disk positions to be read\n");
    int pos[] = {90,120,35,122,38,128,65,68};

    for (i = 1; i <= n; i++) {
        temp = pos[i - 1];
        if (temp >= head) {
            queue1[temp1] = temp;
            temp1++;
        } else {
            queue2[temp2] = temp;
            temp2++;
        }
    }

    for (i = 0; i < temp1 - 1; i++) {
        for (j = i + 1; j < temp1; j++) {
            if (queue1[i] > queue1[j]) {
                temp = queue1[i];
                queue1[i] = queue1[j];
                queue1[j] = temp;
            }
        }
    }

    for (i = 0; i < temp2 - 1; i++) {
        for (j = i + 1; j < temp2; j++) {
            if (queue2[i] < queue2[j]) {
                temp = queue2[i];
                queue2[i] = queue2[j];
                queue2[j] = temp;
            }
        }
    }

    for (i = 1, j = 0; j < temp1; i++, j++)
        queue[i] = queue1[j];

    for (i = temp1 + 1, j = 0; j < temp2; i++, j++)
        queue[i] = queue2[j];

    queue[0] = head;

    for (j = 0; j <= n - 1; j++) {
        diff = abs(queue[j + 1] - queue[j]);
        seek += diff;
        printf("Disk head moves from %d to %d with seek %d\n", queue[j], queue[j + 1], diff);
    }

    printf("Total seek time is %d\n", seek);
    avg = seek / (float) n;
    printf("Average seek time is %f\n", avg);

    return 0;
}

/* Sample Output
Max range of disk: 200
Initial head position: 50
Size of the queue request: 8
Queue of disk positions to be read: {90, 120, 35, 122, 38, 128, 65, 68}

Disk head moves from 50 to 65 with seek 15
Disk head moves from 65 to 68 with seek 3
Disk head moves from 68 to 90 with seek 22
Disk head moves from 90 to 120 with seek 30
Disk head moves from 120 to 122 with seek 2
Disk head moves from 122 to 128 with seek 6
Disk head moves from 128 to 38 with seek 90
Disk head moves from 38 to 35 with seek 3
Total seek time is 171
Average seek time is 21.375000

*/

